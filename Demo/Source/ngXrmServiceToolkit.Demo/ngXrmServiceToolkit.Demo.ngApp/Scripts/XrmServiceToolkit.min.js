/**
* MSCRM 2011 Web Service Toolkit for JavaScript
* @author Jaimie Ji
* @author David Berry
* @current version : 2.2

* Credits:
*   The idea of this library was inspired by Daniel Cai's CrmWebServiceToolkit.
*   The idea of BusinessEntity was inspired by Daniel Cai && Ascentium CrmService JavaScript Library.
*   The REST Endpoint functions were inspired by MSCRM 2011 SDK JavaScript code and various resources from CRM websites and forums. Some of them were just copies with minor modification.
*   The Soap functions were inspired by Daniel Cai && Jamie Miley && Paul Way && Customer Effective.
*   Additional thanks to all contributors of MSCRM and i have learned a lot from you all.
* Date: February, 2012
*
* Special Thanks:
*   JetBrains ReSharper Open License
* Date: July, 2012
**/

XrmServiceToolkit = function () { }, XrmServiceToolkit.Common = function () { var e = function (e) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(e) : alert(e) }, t = function (e, t) { var a; return a = null === e || null === t || void 0 === e || void 0 === t ? !1 : e.replace(/[{}]/g, "").toLowerCase() === t.replace(/[{}]/g, "").toLowerCase() }, a = function (e) { Xrm.Page.getControl(e).setDisabled(!1) }, r = function (e) { Xrm.Page.getControl(e).setDisabled(!0) }, i = function (e) { Xrm.Page.getControl(e).setVisible(!0) }, n = function (e) { Xrm.Page.getControl(e).setVisible(!1) }, s = function (e, t) { Xrm.Page.getAttribute(e).setRequiredLevel(t) }, o = function (t) { e(t.message) }, l = function (e) { try { var t = XrmServiceToolkit.Soap.RetrieveEntityMetadata("Entity", e, !1); return t && 1 === t.length ? t[0].ObjectTypeCode : null } catch (a) { return o(a.message), null } }, c = function (t, a, r) { if (void 0 !== Xrm.Page.ui.setFormNotification) if (r) Xrm.Page.ui.clearFormNotification(r), 1 === a && Xrm.Page.ui.setFormNotification(t, "ERROR", r), 2 === a && Xrm.Page.ui.setFormNotification(t, "INFO", r), 3 === a && Xrm.Page.ui.setFormNotification(t, "WARNING", r); else { var i = "formNotification00"; Xrm.Page.ui.clearFormNotification(i), 1 === a && Xrm.Page.ui.setFormNotification(t, "ERROR", i), 2 === a && Xrm.Page.ui.setFormNotification(t, "INFO", i), 3 === a && Xrm.Page.ui.setFormNotification(t, "WARNING", i) } else { var n = document.getElementById("crmNotifications"); if (null === n || void 0 === n) return void e("Cannot find the notification area"); if ("undefined" != typeof n.AddNotification && "undefined" != typeof n.control.AddNotification) return void e("Add Notification is no longer supported"); 1 === a && ("undefined" != typeof n.AddNotification ? n.AddNotification("mep1", 1, "source", t) : "undefined" != typeof n.control.AddNotification && n.control.AddNotification("mep1", 1, "source", t)), 2 === a && ("undefined" != typeof n.AddNotification ? n.AddNotification("mep3", 3, "source", t) : "undefined" != typeof n.control.AddNotification && n.control.AddNotification("mep3", 3, "source", t)), 3 === a && ("undefined" != typeof n.AddNotification ? n.AddNotification("mep2", 2, "source", t) : "undefined" != typeof n.control.AddNotification && n.control.AddNotification("mep2", 2, "source", t)), "" === t && ("undefined" != typeof n.SetNotifications ? n.SetNotifications(null, null) : "undefined" != typeof n.control.SetNotifications ? n.control.SetNotifications(null, null) : e("Set Notification is no longer supported")) } }, u = function (e, t) { void 0 !== Xrm.Page.getControl(e).setNotification && Xrm.Page.getControl(e).setNotification(t) }, d = function (e, t) { var a = 864e5, r = e.getTime(), i = t.getTime(), n = Math.abs(r - i); return Math.round(n / a) }, m = function (e) { var t = Xrm.Page.ui.tabs.get(e); null != t && Xrm.Page.ui.controls.forEach(function (e) { null !== e.getParent() && null != e.getParent().getParent() && e.getParent().getParent() === t && "subgrid" !== e.getControlType() && e.setDisabled(!0) }) }, y = function (e) { for (var t = Xrm.Page.ui.tabs, a = 0, r = t.getLength() ; r > a; a++) for (var i = t.get(a), n = i.sections, s = 0, o = n.getLength() ; o > s; s++) { var l = n.get(s); if (l.getLabel().toLowerCase() === e.toLowerCase()) { Xrm.Page.ui.controls.forEach(function (t) { null !== t.getParent() && t.getParent().getLabel() === e && "subgrid" !== t.getControlType() && t.setDisabled(!0) }); break } } }; return { EnableField: a, DisableField: r, ShowField: i, HideField: n, UpdateRequiredLevel: s, GetObjectTypeCode: l, CalculateDaysBetween: d, AddNotification: c, AddControlNotification: u, ShowError: o, GuidsAreEqual: t, DisableAllControlsInTab: m, DisableAllControlsInSection: y } }(), XrmServiceToolkit.Rest = function () { var e = function (e) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(e) : alert(e) }, t = function () { var e; if ("undefined" != typeof window.GetGlobalContext) e = window.GetGlobalContext(); else if ("undefined" != typeof GetGlobalContext) e = GetGlobalContext(); else if ("undefined" != typeof Xrm) e = Xrm.Page.context; else { if ("undefined" == typeof window.parent.Xrm) throw new Error("Context is not available."); e = window.parent.Xrm.Page.context } return e }, a = function () { var e = "undefined" != typeof t().getClientUrl ? t().getClientUrl() : t().getServerUrl(); return e.match(/\/$/) && (e = e.substring(0, e.length - 1)), e }, r = function () { return a() + "/XRMServices/2011/OrganizationData.svc/" }, i = function (e) { throw new Error("Error : " + e.status + ": " + e.statusText + ": " + JSON.parse(e.responseText).error.message.value) }, n = function (e, t) { var a; return "string" == typeof t && (a = /Date\(([-+]?\d+)\)/.exec(t)) ? new Date(parseInt(t.replace("/Date(", "").replace(")/", ""), 10)) : t }, s = function (e, t) { if ("undefined" == typeof e || null === e) throw new Error(t) }, o = function (e, t) { if ("string" != typeof e) throw new Error(t) }, l = function (e, t) { if ("function" != typeof e) throw new Error(t) }, c = function (e, t) { if ("boolean" != typeof e) throw new Error(t) }, u = function () { if (XMLHttpRequest) return new XMLHttpRequest; try { return new ActiveXObject("MSXML2.XMLHTTP.6.0") } catch (t) { try { return new ActiveXObject("MSXML2.XMLHTTP.3.0") } catch (t) { return e("This browser is not AJAX enabled."), null } } }, d = function (e, t, a, d, m) { s(e, "XrmServiceToolkit.REST.createRecord requires the object parameter."), o(t, "XrmServiceToolkit.REST.createRecord requires the type parameter is a string."), l(a, "XrmServiceToolkit.REST.createRecord requires the successCallback is a function."), l(d, "XrmServiceToolkit.REST.createRecord requires the errorCallback is a function."), c(m, "XrmServiceToolkit.REST.createRecord requires the async is a boolean."); var y = u(); y.open("POST", r() + t, m), y.setRequestHeader("Accept", "application/json"), y.setRequestHeader("Content-Type", "application/json; charset=utf-8"), m ? (y.onreadystatechange = function () { 4 === this.readyState && (y.onreadystatechange = null, 201 === y.status ? a(JSON.parse(y.responseText, n).d) : d(i(y))) }, y.send(JSON.stringify(e))) : (y.send(JSON.stringify(e)), 201 === y.status ? a(JSON.parse(y.responseText, n).d) : d(i(y))) }, m = function (e, t, a, s, d, m, y) { o(e, "XrmServiceToolkit.REST.retrieveRecord requires the id parameter is a string."), o(t, "XrmServiceToolkit.REST.retrieveRecord requires the type parameter is a string."), null != a && o(a, "XrmServiceToolkit.REST.retrieveRecord requires the select parameter is a string."), null != s && o(s, "XrmServiceToolkit.REST.retrieveRecord requires the expand parameter is a string."), l(d, "XrmServiceToolkit.REST.retrieveRecord requires the successCallback parameter is a function."), l(m, "XrmServiceToolkit.REST.retrieveRecord requires the errorCallback parameter is a function."), c(y, "XrmServiceToolkit.REST.retrieveRecord requires the async parameter is a boolean."); var p = ""; if (null != a || null != s) { if (p = "?", null != a) { var f = "$select=" + a; null != s && (f = f + "," + s), p += f } null != s && (p = p + "&$expand=" + s) } var h = u(); h.open("GET", r() + t + "(guid'" + e + "')" + p, y), h.setRequestHeader("Accept", "application/json"), h.setRequestHeader("Content-Type", "application/json; charset=utf-8"), y ? (h.onreadystatechange = function () { 4 === h.readyState && (200 === h.status ? d(JSON.parse(h.responseText, n).d) : m(i(h))) }, h.send()) : (h.send(), 200 === h.status ? d(JSON.parse(h.responseText, n).d) : m(i(h))) }, y = function (e, t, a, n, d, m) { o(e, "XrmServiceToolkit.REST.updateRecord requires the id parameter."), s(t, "XrmServiceToolkit.REST.updateRecord requires the object parameter."), o(a, "XrmServiceToolkit.REST.updateRecord requires the type parameter."), l(n, "XrmServiceToolkit.REST.updateRecord requires the successCallback is a function."), l(d, "XrmServiceToolkit.REST.updateRecord requires the errorCallback is a function."), c(m, "XrmServiceToolkit.REST.updateRecord requires the async parameter is a boolean."); var y = u(); y.open("POST", r() + a + "(guid'" + e + "')", m), y.setRequestHeader("Accept", "application/json"), y.setRequestHeader("Content-Type", "application/json; charset=utf-8"), y.setRequestHeader("X-HTTP-Method", "MERGE"), m ? (y.onreadystatechange = function () { 4 === y.readyState && (204 === y.status || 1223 === y.status ? n() : d(i(y))) }, y.send(JSON.stringify(t))) : (y.send(JSON.stringify(t)), 204 === y.status || 1223 === y.status ? n() : d(i(y))) }, p = function (e, t, a, n, s) { o(e, "XrmServiceToolkit.REST.deleteRecord requires the id parameter."), o(t, "XrmServiceToolkit.REST.deleteRecord requires the type parameter."), l(a, "XrmServiceToolkit.REST.deleteRecord requires the successCallback is a function."), l(n, "XrmServiceToolkit.REST.deleteRecord requires the errorCallback is a function."), c(s, "XrmServiceToolkit.REST.deleteRecord requires the async parameter is a boolean."); var d = u(); d.open("POST", r() + t + "(guid'" + e + "')", s), d.setRequestHeader("Accept", "application/json"), d.setRequestHeader("Content-Type", "application/json; charset=utf-8"), d.setRequestHeader("X-HTTP-Method", "DELETE"), s ? (d.onreadystatechange = function () { 4 === d.readyState && (204 === d.status || 1223 === d.status ? a() : n(i(d))) }, d.send()) : (d.send(), 204 === d.status || 1223 === d.status ? a() : n(i(d))) }, f = function (e, t, a, s, d, m) { o(e, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the type parameter is a string."), null != t && o(t, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the options parameter is a string."), l(a, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the successCallback parameter is a function."), l(s, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the errorCallback parameter is a function."), l(d, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the OnComplete parameter is a function."), c(m, "XrmServiceToolkit.REST.retrieveMultipleRecords requires the async parameter is a boolean."); var y = ""; null != t && (y = "?" !== t.charAt(0) ? "?" + t : t); var p = u(); if (p.open("GET", r() + e + y, m), p.setRequestHeader("Accept", "application/json"), p.setRequestHeader("Content-Type", "application/json; charset=utf-8"), m) p.onreadystatechange = function () { if (4 === p.readyState) if (200 === p.status) { var t = JSON.parse(p.responseText, n).d; if (a(t.results), null == t.__next) d(); else { var o = t.__next.substring((r() + e).length); f(e, o, a, s, d, m) } } else s(i(p)) }, p.send(); else if (p.send(), 200 === p.status) { var h = JSON.parse(p.responseText, n).d; if (a(h.results), null == h.__next) d(); else { var g = h.__next.substring((r() + e).length); f(e, g, a, s, d, m) } } else s(i(p)) }, h = function (e) { s(e, "The value passed to the performRequest function settings parameter is null or undefined."); var t = u(); t.open(e.type, e.url, e.async), t.setRequestHeader("Accept", "application/json"), null != e.action && t.setRequestHeader("X-HTTP-Method", e.action), t.setRequestHeader("Content-Type", "application/json; charset=utf-8"), e.async ? (t.onreadystatechange = function () { 4 === t.readyState && (204 === t.status || 1223 === t.status || 201 === t.status ? e.success(t) : e.error ? e.error(i(t)) : i(t)) }, "undefined" == typeof e.data ? t.send() : t.send(e.data)) : ("undefined" == typeof e.data ? t.send() : t.send(e.data), 204 === t.status || 1223 === t.status || 201 === t.status ? e.success(t) : e.error ? e.error(i(t)) : i(t)) }, g = function (e, t, a, i, n, o, u, d) { s(e, "XrmServiceToolkit.REST.associateRecord requires the entityid1 parameter."), s(t, "XrmServiceToolkit.REST.associateRecord requires the odataSetName1 parameter."), s(a, "XrmServiceToolkit.REST.associateRecord requires the entityid2 parameter."), s(i, "XrmServiceToolkit.REST.associateRecord requires the odataSetName2 parameter."), s(n, "XrmServiceToolkit.REST.associateRecord requires the relationship parameter."), l(o, "XrmServiceToolkit.REST.associateRecord requires the successCallback is a function."), l(u, "XrmServiceToolkit.REST.associateRecord requires the errorCallback is a function."), c(d, "XrmServiceToolkit.REST.associateRecord requires the async parameter is a boolean"); var m = {}; m.uri = r() + "/" + i + "(guid'" + a + "')"; var y = window.JSON.stringify(m); h({ type: "POST", url: r() + "/" + t + "(guid'" + e + "')/$links/" + n, data: y, success: o, error: u, async: d }) }, v = function (e, t, a, i, n, o, u) { s(e, "XrmServiceToolkit.REST.disassociateRecord requires the entityid1 parameter."), s(t, "XrmServiceToolkit.REST.disassociateRecord requires the odataSetName parameter."), s(a, "XrmServiceToolkit.REST.disassociateRecord requires the entityid2 parameter."), s(i, "XrmServiceToolkit.REST.disassociateRecord requires the relationship parameter."), l(n, "XrmServiceToolkit.REST.disassociateRecord requires the successCallback is a function."), l(o, "XrmServiceToolkit.REST.disassociateRecord requires the errorCallback is a function."), c(u, "XrmServiceToolkit.REST.disassociateRecord requires the async parameter is a boolean."); var d = r() + "/" + t + "(guid'" + e + "')/$links/" + i + "(guid'" + a + "')"; h({ url: d, type: "POST", action: "DELETE", error: o, success: n, async: u }) }; return { Create: d, Retrieve: m, Update: y, Delete: p, RetrieveMultiple: f, Associate: g, Disassociate: v } }(), XrmServiceToolkit.Soap = function () {
    var e = function (e) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(e) : alert(e) }, t = function (e) { if (null === e || "" === e || void 0 === e) return e; for (var t = 0, a = "", r = "", i = 0, n = e.length; n > i; i++) { var s = e.charCodeAt(i); a += s > 96 && 123 > s || s > 64 && 91 > s || 32 === s || s > 47 && 58 > s || 46 === s || 44 === s || 45 === s || 95 === s ? String.fromCharCode(s) : "&#" + s + ";", 500 === ++t && (r += a, a = "", t = 0) } return a.length && (r += a), r }, a = function (e) { var a, r, i, n = ""; for (r = 0, i = e.length; i > r; r++) if (a = e.charCodeAt(r), a >= 55296 && 57343 >= a) if (r + 1 < e.length) { var s = e.charCodeAt(r + 1); s >= 56320 && 57343 >= s ? (n += "CRMEntityReferenceOpen" + (1024 * (a - 55296) + (1023 & s) + 65536).toString(16) + "CRMEntityReferenceClose", r++) : n += String.fromCharCode(a) } else n += String.fromCharCode(a); else n += String.fromCharCode(a); for (e = n, n = "", r = 0, i = e.length; i > r; r++) a = e.charCodeAt(r), n += String.fromCharCode(a >= 55296 && 57343 >= a ? 65533 : a); return e = n, e = t(e), e = e.replace(/CRMEntityReferenceOpen/g, "&#x"), e = e.replace(/CRMEntityReferenceClose/g, ";") }, r = function (e) { return "undefined" == typeof e || "unknown" == typeof e || null === e ? e : ("string" != typeof e && (e = e.toString()), a(e)) }, i = function (e) { return "string" != typeof e && (e = e.toString()), e }, n = function (e, t) { for (t = t || 2, e = "" + e; e.length < t;) e = "0" + e; return e }, s = function (e) { return e.getFullYear() + "-" + n(e.getMonth() + 1) + "-" + n(e.getDate()) + "T" + n(e.getHours()) + ":" + n(e.getMinutes()) + ":" + n(e.getSeconds()) }, o = function (e) { return "string" == typeof e && "{" === e.slice(0, 1) && "}" === e.slice(-1) && (e = e.slice(1, -1)), "object" == typeof e && e.getTime ? s(e) : r(e) }, l = function () { var e; if ("undefined" != typeof window.GetGlobalContext) e = window.GetGlobalContext(); else if ("undefined" != typeof GetGlobalContext) e = GetGlobalContext(); else if ("undefined" != typeof Xrm) e = Xrm.Page.context; else { if ("undefined" == typeof window.parent.Xrm) throw new Error("Context is not available."); e = window.parent.Xrm.Page.context } return e }, c = function () { var e = "undefined" != typeof l().getClientUrl ? l().getClientUrl() : l().getServerUrl(); return e.match(/\/$/) && (e = e.substring(0, e.length - 1)), e }, u = function () { return c() + "/XRMServices/2011/Organization.svc/web" }, d = function (e, t) { this.type = e, this.value = t }, m = function (e, t, a) { this.id = e, this.logicalName = t, this.name = a, this.type = "EntityReference" }, y = function (e) { this.value = e, this.type = "EntityCollection" }, p = function (e, t) { this.value = e, this.formattedValue = t, this.type = "OptionSetValue" }, f = function (e, t) { this.id = t ? t : "00000000-0000-0000-0000-000000000000", this.logicalName = e, this.attributes = new Object }, h = function (e) { var t = e.split(/\D/); return new Date(Date.UTC(t[0], --t[1], t[2], t[3], t[4], t[5])) }, g = function (e) { var t = { s: "http://schemas.xmlsoap.org/soap/envelope/", a: "http://schemas.microsoft.com/xrm/2011/Contracts", i: "http://www.w3.org/2001/XMLSchema-instance", b: "http://schemas.datacontract.org/2004/07/System.Collections.Generic", c: "http://schemas.microsoft.com/xrm/2011/Metadata", ser: "http://schemas.microsoft.com/xrm/2011/Contracts/Services" }; return t[e] || null }, v = function (e) { return null == e ? !0 : null != e.attributes.getNamedItem("i:nil") && "true" === e.attributes.getNamedItem("i:nil").value ? !0 : !1 }, b = function (e, t) { if ("undefined" != typeof e.selectNodes) return e.selectNodes(t); for (var a = [], r = e.evaluate(t, e, g, XPathResult.ANY_TYPE, null), i = r.iterateNext() ; i;) a.push(i), i = r.iterateNext(); return a }, R = function (e, t) { if ("undefined" != typeof e.selectSingleNode) return e.selectSingleNode(t); var a = new XPathEvaluator, r = a.evaluate(t, e, g, XPathResult.FIRST_ORDERED_NODE_TYPE, null); return r.singleNodeValue }, N = function (e, t) { var a = R(e, t); return v(a) ? null : "undefined" != typeof a.text ? a.text : a.textContent }, T = function (e) { return "undefined" != typeof e.text ? e.text : e.textContent }, S = function (e) { var t = ["xmlns:s='http://schemas.xmlsoap.org/soap/envelope/'", "xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'", "xmlns:i='http://www.w3.org/2001/XMLSchema-instance'", "xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'", "xmlns:c='http://schemas.microsoft.com/xrm/2011/Metadata'", "xmlns:ser='http://schemas.microsoft.com/xrm/2011/Contracts/Services'"]; e.setProperty("SelectionNamespaces", t.join(" ")) }, P = function (t) { var a = null; try { a = new ActiveXObject("Microsoft.XMLDOM"), a.async = !1, a.loadXML(t) } catch (r) { if (window.DOMParser) { var i = new DOMParser; a = i.parseFromString(t, "text/xml") } else e("Cannot convert the XML string to a cross-browser XML object.") } return a }, C = function (t) { var a = ""; try { null != t && ("undefined" != typeof XMLSerializer && "undefined" == typeof t.xml ? a = (new XMLSerializer).serializeToString(t) : "undefined" != typeof t.xml ? a = t.xml : "undefined" != typeof t[0].xml && (a = t[0].xml)) } catch (r) { e("Cannot convert the XML to a string.") } return a }; f.prototype = { serialize: function () { var e = ["<b:value i:type='a:Entity'>"]; e.push('<a:Attributes xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">'); var t = this.attributes; for (var a in t) if (t.hasOwnProperty(a)) { var i = t[a]; if (e.push("<a:KeyValuePairOfstringanyType>"), e.push("<b:key>", a, "</b:key>"), null === i || null === i.value) e.push("<b:value i:nil='true' />"); else { var n, s, l, c, u, d, m = i.type ? r(i.type) : typeof i; switch (m) { case "OptionSetValue": n = i.hasOwnProperty("value") ? i.value : i, s = o(n), e.push("<b:value i:type='a:OptionSetValue'>"), e.push("<a:Value>", s, "</a:Value>", "</b:value>"); break; case "EntityCollection": e.push("<b:value i:type='a:EntityCollection'>"), e.push("<a:Entities>"), n = i.hasOwnProperty("value") ? i.value : i; for (var y = isArray(n) ? n : [n], p = 0, f = y.length; f > p; p++) { var h = y[p]; l = h.hasOwnProperty("id") ? h.id : h, c = o(l), u = h.hasOwnProperty("logicalName") ? h.logicalName : h, d = o(u), e.push("<a:Entity>"), e.push("<a:Attributes>"), e.push("<a:KeyValuePairOfstringanyType>"), e.push("<b:key>partyid</b:key>"), e.push("<b:value i:type='a:EntityReference'>"), e.push("<a:Id>", c, "</a:Id>"), e.push("<a:LogicalName>", d, "</a:LogicalName>"), e.push("<a:Name i:nil='true' />"), e.push("</b:value>"), e.push("</a:KeyValuePairOfstringanyType>"), e.push("</a:Attributes>"), e.push("<a:EntityState i:nil='true' />"), e.push("<a:FormattedValues />"), e.push("<a:Id>00000000-0000-0000-0000-000000000000</a:Id>"), e.push("<a:LogicalName>activityparty</a:LogicalName>"), e.push("<a:RelatedEntities />"), e.push("</a:Entity>") } e.push("</a:Entities>"), e.push("<a:EntityName i:nil='true' />"), e.push("<a:MinActiveRowVersion i:nil='true' />"), e.push("<a:MoreRecords>false</a:MoreRecords>"), e.push("<a:PagingCookie i:nil='true' />"), e.push("<a:TotalRecordCount>0</a:TotalRecordCount>"), e.push("<a:TotalRecordCountLimitExceeded>false</a:TotalRecordCountLimitExceeded>"), e.push("</b:value>"); break; case "EntityReference": l = i.hasOwnProperty("id") ? i.id : i, c = o(l), u = i.hasOwnProperty("logicalName") ? i.logicalName : i, d = o(u), e.push("<b:value i:type='a:EntityReference'>"), e.push("<a:Id>", c, "</a:Id>"), e.push("<a:LogicalName>", d, "</a:LogicalName>"), e.push("<a:Name i:nil='true' />", "</b:value>"); break; case "Money": n = i.hasOwnProperty("value") ? i.value : i, s = o(n), e.push("<b:value i:type='a:Money'>"), e.push("<a:Value>", s, "</a:Value>", "</b:value>"); break; case "guid": n = i.hasOwnProperty("value") ? i.value : i, s = o(n), e.push("<b:value i:type='c:guid' xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/'>"), e.push(s, "</b:value>"); break; case "number": n = i.hasOwnProperty("value") ? i.value : i, s = o(n); var g = parseInt(s) === s ? "c:int" : "c:decimal"; e.push("<b:value i:type='", g, "' xmlns:c='http://www.w3.org/2001/XMLSchema'>"), e.push(s, "</b:value>"); break; default: n = i.hasOwnProperty("value") ? i.value : i, s = o(n), m = "object" == typeof n && n.getTime ? "dateTime" : m, e.push("<b:value i:type='c:", m, "' xmlns:c='http://www.w3.org/2001/XMLSchema'>", s, "</b:value>") } } e.push("</a:KeyValuePairOfstringanyType>") } return e.push("</a:Attributes><a:EntityState i:nil='true' />"), e.push("<a:FormattedValues xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />"), e.push("<a:Id>", o(this.id), "</a:Id>"), e.push("<a:LogicalName>", this.logicalName, "</a:LogicalName>"), e.push("<a:RelatedEntities xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />"), e.push("</b:value>"), e.join("") }, deserialize: function (e) { for (var t = new Object, a = e.childNodes, r = 0, i = a.length; i > r; r++) { var n, s = a[r]; switch (s.nodeName) { case "a:Attributes": for (var o = s, l = 0, c = o.childNodes.length; c > l; l++) { var u = o.childNodes[l], f = u.childNodes; n = T(f[0]); var g = f[1], v = g.attributes.getNamedItem("i:type").value; if ("AliasedValue" === v.replace("c:", "").replace("a:", "")) { var b = g.childNodes[2]; v = b.attributes.getNamedItem("i:type").value, g = b } var R, N; switch (v) { case "a:OptionSetValue": var S = new p; S.type = v.replace("a:", ""), S.value = parseInt(T(g)), t[n] = S; break; case "a:EntityReference": R = new m, R.type = v.replace("a:", ""); var P = g.childNodes; R.id = T(P[0]), R.logicalName = T(P[1]), R.name = T(P[2]), t[n] = R; break; case "a:EntityCollection": R = new y, R.type = v.replace("a:", ""); for (var C = [], E = g.childNodes, x = 0, k = E[0].childNodes.length; k > x; x++) for (var q = u.childNodes[1].childNodes[0].childNodes[x].childNodes[0].childNodes, w = 0, O = q.length; O > w; w++) { var X = q[w].childNodes, I = T(X[0]); if ("partyid" === I) { var V = new m; V.id = T(X[1].childNodes[0]), V.logicalName = T(X[1].childNodes[1]), V.name = T(X[1].childNodes[2]), C[x] = V } } R.value = C, t[n] = R; break; case "a:Money": N = new d, N.type = v.replace("a:", ""), N.value = parseFloat(T(g)), t[n] = N; break; default: N = new d, N.type = v.replace("c:", "").replace("a:", ""), N.value = "int" === N.type ? parseInt(T(g)) : "decimal" === N.type || "double" === N.type ? parseFloat(T(g)) : "dateTime" === N.type ? h(T(g)) : "boolean" === N.type ? "false" === T(g) ? !1 : !0 : T(g), t[n] = N } } this.attributes = t; break; case "a:Id": this.id = T(s); break; case "a:LogicalName": this.logicalName = T(s); break; case "a:FormattedValues": for (var A = s, j = 0, M = A.childNodes.length; M > j; j++) { var L = A.childNodes[j]; n = T(L.childNodes[0]), this.attributes[n].formattedValue = T(L.childNodes[1]), isNaN(this.attributes[n].value) && "dateTime" === this.attributes[n].type && (this.attributes[n].value = new Date(this.attributes[n].formattedValue)) } } } } }; var E = function (e) { if (12029 === e.status) throw new Error("The attempt to connect to the server failed."); if (12007 === e.status) throw new Error("The server name could not be resolved."); var t = e.responseXML, a = "Unknown (unable to parse the fault)"; if (null !== t && "object" == typeof t) for (var r = null, i = null, n = t.firstChild.firstChild, s = 0; s < n.childNodes.length; s++) { var o = n.childNodes[s]; if ("s:Fault" === o.nodeName) { for (var l = 0; l < o.childNodes.length; l++) { var c = o.childNodes[l]; if ("faultstring" === c.nodeName && (r = T(c)), "detail" === c.nodeName) for (var u = 0; u < c.childNodes.length; u++) { var d = c.childNodes[u]; if ("OrganizationServiceFault" === d.nodeName) for (var m = 0; m < d.childNodes.length; m++) { var y = d.childNodes[m]; if ("ErrorCode" === y.nodeName) { i = T(y); break } } } } break } } throw null != i && null != r ? a = "Error Code:" + i + " Message: " + r : null != r && (a = r), new Error(a) }, x = function (e, t, a, r) { a = a || !1; var i = ["<soap:Envelope xmlns:soap='http://schemas.xmlsoap.org/soap/envelope/'>", "<soap:Body>", "<", t, " xmlns='http://schemas.microsoft.com/xrm/2011/Contracts/Services' xmlns:i='http://www.w3.org/2001/XMLSchema-instance'>", e, "</", t, ">", "</soap:Body>", "</soap:Envelope>"].join(""), n = new XMLHttpRequest; n.open("POST", u(), a), n.setRequestHeader("Accept", "application/xml, text/xml, */*"), n.setRequestHeader("Content-Type", "text/xml; charset=utf-8"), n.setRequestHeader("SOAPAction", "http://schemas.microsoft.com/xrm/2011/Contracts/Services/IOrganizationService/" + t); try { n.responseType = "msxml-document" } catch (s) { } if (a) n.onreadystatechange = function () { if (4 === n.readyState) if (n.onreadystatechange = null, 200 === n.status) { var e = n.responseXML; try { S(e) } catch (t) { } r(e) } else E(n) }, n.send(i); else { if (n.send(i), 200 === n.status) { var o = n.responseXML; try { S(o) } catch (s) { } var l = o; return r ? r(l) : l } E(n) } }, k = function (e, t) { var a = e.serialize(), r = !!t, n = ["<request i:type='a:CreateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", a, "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Create</a:RequestName>", "</request>"].join(""); return x(n, "Execute", r, function (e) { var a = N(e, "//b:value"), n = i(a); return r ? void t(n) : n }) }, q = function (e, t) { var a = e.serialize(), r = !!t, n = ["<request i:type='a:UpdateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", a, "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Update</a:RequestName>", "</request>"].join(""); return x(n, "Execute", r, function (e) { var a = N(e, "//a:Results"), n = i(a); return r ? void t(n) : n }) }, w = function (e, t, a) { var r = ["<request i:type='a:DeleteRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'><a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'><a:KeyValuePairOfstringanyType><b:key>Target</b:key><b:value i:type='a:EntityReference'><a:Id>", t, "</a:Id><a:LogicalName>", e, "</a:LogicalName><a:Name i:nil='true' /></b:value></a:KeyValuePairOfstringanyType></a:Parameters><a:RequestId i:nil='true' /><a:RequestName>Delete</a:RequestName></request>"].join(""), n = !!a; return x(r, "Execute", n, function (e) { var t = N(e, "//a:Results"), r = i(t); return n ? void a(r) : r }) }, O = function (e, t) { var a = !!t; return x(e, "Execute", a, function (e) { return a ? void t(e) : e }) }, X = function (e, t, a, i) { var n = ["<fetch mapping='logical' page='" + t + "' count='5000' paging-cookie='" + a + "'>", e.replace(/\"/g, "'"), "</fetch>"].join(""), s = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:FetchExpression'>", "<a:Query>", r(n), "</a:Query>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""); return x(s, "Execute", !1, function (a) { for (var r = R(a, "//a:Entities"), n = "true" === N(a, "//a:MoreRecords"), s = 0, o = r.childNodes.length; o > s; s++) { var l = new f; l.deserialize(r.childNodes[s]), i.push(l) } if (!n) return i; t += 1; var c = N(a, "//a:PagingCookie").replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&quot;"); X(e, t, c, i) }) }, I = function (e, t, a) { var i = e; if ("<entity" === e.slice(0, 7)) i = ["<fetch mapping='logical'>", e.replace(/\"/g, "'"), "</fetch>"].join(""); else { var n = -1 !== e.indexOf("aggregate="), s = -1 !== e.indexOf("page='1'") && -1 !== e.indexOf("count='"), o = e.indexOf("distinct="), l = -1 !== o, c = e.substring(o + 9, o + 10), u = l ? e.substring(e.indexOf("distinct=") + 10, e.indexOf(c, e.indexOf("distinct=") + 10)) : "false", d = P(e), m = R(d, "//entity"); if (null === m) throw new Error("XrmServiceToolkit.Fetch: No 'entity' node in the provided FetchXML."); var y = m; try { e = C(y).replace(/\"/g, "'") } catch (p) { if (void 0 === y || !y.xml) throw new Error("XrmServiceToolkit.Fetch: This client does not provide the necessary XML features to continue."); e = y.xml.replace(/\"/g, "'") } n || s || (i = ["<fetch mapping='logical' distinct='" + (l ? u : "false") + "' >", e, "</fetch>"].join("")) } var h = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:FetchExpression'>", "<a:Query>", r(i), "</a:Query>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""), g = !!a; return x(h, "Execute", g, function (r) { var i = R(r, "//a:Entities"), n = "true" === N(r, "//a:MoreRecords"), s = []; if (null != i) { for (var o = 0, l = i.childNodes.length; l > o; o++) { var c = new f; c.deserialize(i.childNodes[o]), s.push(c) } if (t && n) { var u = N(r, "//a:PagingCookie").replace(/\"/g, "'").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&quot;"); X(e, 2, u, s) } if (!g) return s; a(s) } }) }, V = function (e, t, a, r) { var i = "", n = ""; if (null != a) { for (var s = 0, l = a.length; l > s; s++) i += "<c:string>" + a[s] + "</c:string>"; n = "<a:AllColumns>false</a:AllColumns><a:Columns xmlns:c='http://schemas.microsoft.com/2003/10/Serialization/Arrays'>" + i + "</a:Columns>" } else n = "<a:AllColumns>true</a:AllColumns><a:Columns xmlns:b='http://schemas.microsoft.com/2003/10/Serialization/Arrays' />"; var c = ["<request i:type='a:RetrieveRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", o(t), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>ColumnSet</b:key>", "<b:value i:type='a:ColumnSet'>", n, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Retrieve</a:RequestName>", "</request>"].join(""), u = !!r; return x(c, "Execute", !!r, function (e) { var t = R(e, "//b:value"), a = new f; return a.deserialize(t), u ? void r(a) : a }) }, A = function (e, t) { var a = ["<request i:type='a:RetrieveMultipleRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Query</b:key>", "<b:value i:type='a:QueryExpression'>", e, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true'/>", "<a:RequestName>RetrieveMultiple</a:RequestName>", "</request>"].join(""), r = !!t; return x(a, "Execute", r, function (e) { for (var a = R(e, "//a:Entities"), i = [], n = 0, s = a.childNodes.length; s > n; n++) { var o = new f; o.deserialize(a.childNodes[n]), i[n] = o } return r ? void t(i) : i }) }, j = function (e, t, a) { for (var r = [], i = 0, n = t.length; n > i; i++) "" !== t[i] && void 0 != t[i] && r.push(e, t[i], a); return r.join("") }, M = function (e, t) { for (var a = [], r = 0, i = e.length; i > r; r++) if ("" !== e[r]) { var n = t[r]; if (typeof n == typeof []) { a.push("<condition attribute='", e[r], "' operator='in' >"); for (var s in n) if (n.hasOwnProperty(s)) { var l = o(n[s]); a.push("<value>" + l + "</value>") } a.push("</condition>") } else "string" == typeof n && a.push("<condition attribute='", e[r], "' operator='eq' value='", o(n), "' />") } return a.join("") }, L = function (e) { return -1 !== e.constructor.toString().indexOf("Array") }, K = function (e, t) { var a = e.entityName, r = e.attributes, i = e.values, n = e.columnSet, s = e.orderBy || ""; r = L(r) ? r : [r], i = L(i) ? i : [i], s = s && L(s) ? s : [s], n = n && L(n) ? n : [n]; var o = ["<entity name='", a, "'>", j("<attribute name='", n, "' />"), j("<order attribute='", s, "' />"), "<filter>", M(r, i), "</filter>", "</entity>"].join(""); return I(o, !1, t) }, Q = function (e, t) { var a = e.entityName, r = e.attributes, i = e.values, n = e.columnSet, s = e.orderBy || ""; r = L(r) ? r : [r], i = L(i) ? i : [i], s = s && L(s) ? s : [s], n = n && L(n) ? n : [n]; var o = ["<entity name='", a, "'>", j("<attribute name='", n, "' />"), j("<order attribute='", s, "' />"), "<filter>", M(r, i), "</filter>", "</entity>"].join(""), l = !!t; return I(o, !0, l) }, G = function (e, t, a, r, n) {
        var s = ["<request i:type='b:SetStateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>EntityMoniker</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(t), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>State</c:key>", "<c:value i:type='a:OptionSetValue'>", "<a:Value>", a.toString(), "</a:Value>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Status</c:key>", "<c:value i:type='a:OptionSetValue'>", "<a:Value>", r.toString(), "</a:Value>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>SetState</a:RequestName>", "</request>"].join(""), l = !!n;
        return x(s, "Execute", l, function (e) { var t = N(e, "//ser:ExecuteResult"), a = i(t); return l ? void n(a) : a })
    }, F = function (e, t, a, r, n, s) { var l = n; l = L(l) ? l : [l]; for (var c = [], u = 0, d = l.length; d > u; u++) "" !== l[u].id && c.push("<a:EntityReference>", "<a:Id>", l[u].id, "</a:Id>", "<a:LogicalName>", r, "</a:LogicalName>", "<a:Name i:nil='true' />", "</a:EntityReference>"); var m = c.join(""), y = ["<request i:type='a:AssociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", o(a), "</a:Id>", "<a:LogicalName>", t, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>Relationship</b:key>", "<b:value i:type='a:Relationship'>", "<a:PrimaryEntityRole>Referenced</a:PrimaryEntityRole>", "<a:SchemaName>", e, "</a:SchemaName>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RelatedEntities</b:key>", "<b:value i:type='a:EntityReferenceCollection'>", m, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Associate</a:RequestName>", "</request>"].join(""), p = !!s; return x(y, "Execute", p, function (e) { var t = N(e, "//ser:ExecuteResult"), a = i(t); return p ? void s(a) : a }) }, D = function (e, t, a, r, n, s) { var l = n; l = L(l) ? l : [l]; for (var c = [], u = 0, d = l.length; d > u; u++) "" !== l[u].id && c.push("<a:EntityReference>", "<a:Id>", l[u].id, "</a:Id>", "<a:LogicalName>", r, "</a:LogicalName>", "<a:Name i:nil='true' />", "</a:EntityReference>"); var m = c.join(""), y = ["<request i:type='a:DisassociateRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts'>", "<a:Parameters xmlns:b='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<b:key>Target</b:key>", "<b:value i:type='a:EntityReference'>", "<a:Id>", o(a), "</a:Id>", "<a:LogicalName>", t, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>Relationship</b:key>", "<b:value i:type='a:Relationship'>", "<a:PrimaryEntityRole i:nil='true' />", "<a:SchemaName>", e, "</a:SchemaName>", "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RelatedEntities</b:key>", "<b:value i:type='a:EntityReferenceCollection'>", m, "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Disassociate</a:RequestName>", "</request>"].join(""), p = !!s; return x(y, "Execute", p, function (e) { var t = N(e, "//ser:ExecuteResult"), a = i(t); return p ? void s(a) : a }) }, U = function () { var e = ["<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />", "<a:RequestId i:nil='true' />", "<a:RequestName>WhoAmI</a:RequestName>", "</request>"].join(""), t = x(e, "Execute"); return T(b(t, "//b:value")[0]) }, H = function () { var e = ["<request i:type='b:WhoAmIRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic' />", "<a:RequestId i:nil='true' />", "<a:RequestName>WhoAmI</a:RequestName>", "</request>"].join(""), t = x(e, "Execute"); return T(b(t, "//b:value")[1]) }, z = function () { var e = ["<fetch version='1.0' output-format='xml-platform' mapping='logical' distinct='true'>", "<entity name='role'>", "<attribute name='name' />", "<attribute name='businessunitid' />", "<attribute name='roleid' />", "<order attribute='name' descending='false' /><link-entity name='systemuserroles' from='roleid' to='roleid' visible='false' intersect='true'>", "<link-entity name='systemuser' from='systemuserid' to='systemuserid' alias='aa'>", "<filter type='and'>", "<condition attribute='systemuserid' operator='eq-userid' />", "</filter>", "</link-entity>", "</link-entity>", "</entity>", "</fetch>"].join(""), t = I(e), a = []; if (null !== t && "undefined" != typeof t) for (var r = 0, i = t.length; i > r; r++) a[r] = t[r].attributes.name.value; return a }, B = function () { for (var e = z(), t = 0, a = e.length; a > t; t++) for (var r = 0, i = arguments.length; i > r; r++) if (e[t] === arguments[r]) return !0; return !1 }, _ = function (e, t, a, r, n) { var s = ["<request i:type='b:AssignRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(t), "</a:Id>", "<a:LogicalName>", e, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Assignee</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(r), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>Assign</a:RequestName>", "</request>"].join(""), l = !!n; return x(s, "Execute", l, function (e) { var t = N(e, "//ser:ExecuteResult"), a = i(t); return l ? void n(a) : a }) }, J = function (e, t) { var a = e.targetEntityName, r = e.targetEntityId, n = e.principalEntityName, s = e.principalEntityId, l = e.accessRights; l = L(l) ? l : [l]; for (var c = "", u = 0, d = l.length; d > u; u++) c += o(l[u]) + " "; var m = ["<request i:type='b:GrantAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(r), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>PrincipalAccess</c:key>", "<c:value i:type='b:PrincipalAccess'>", "<b:AccessMask>", c, "</b:AccessMask>", "<b:Principal>", "<a:Id>", o(s), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:Principal>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>GrantAccess</a:RequestName>", "</request>"].join(""), y = !!t; return x(m, "Execute", y, function (e) { var a = N(e, "//ser:ExecuteResult"), r = i(a); return y ? void t(r) : r }) }, W = function (e, t) { var a = e.targetEntityName, r = e.targetEntityId, n = e.principalEntityName, s = e.principalEntityId, l = e.accessRights; l = L(l) ? l : [l]; for (var c = "", u = 0, d = l.length; d > u; u++) c += o(l[u]) + " "; var m = ["<request i:type='b:ModifyAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(r), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>PrincipalAccess</c:key>", "<c:value i:type='b:PrincipalAccess'>", "<b:AccessMask>", c, "</b:AccessMask>", "<b:Principal>", "<a:Id>", o(s), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</b:Principal>", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>ModifyAccess</a:RequestName>", "</request>"].join(""), y = !!t; return x(m, "Execute", y, function (e) { var a = N(e, "//ser:ExecuteResult"), r = i(a); return y ? void t(r) : r }) }, $ = function (e, t) { var a = e.targetEntityName, r = e.targetEntityId, n = e.revokeeEntityName, s = e.revokeeEntityId, l = ["<request i:type='b:RevokeAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(r), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Revokee</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(s), "</a:Id>", "<a:LogicalName>", n, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>RevokeAccess</a:RequestName>", "</request>"].join(""), c = !!t; return x(l, "Execute", c, function (e) { var a = N(e, "//ser:ExecuteResult"), r = i(a); return c ? void t(r) : r }) }, Y = function (e, t) { var a = e.targetEntityName, r = e.targetEntityId, i = e.principalEntityName, n = e.principalEntityId, s = ["<request i:type='b:RetrievePrincipalAccessRequest' xmlns:a='http://schemas.microsoft.com/xrm/2011/Contracts' xmlns:b='http://schemas.microsoft.com/crm/2011/Contracts'>", "<a:Parameters xmlns:c='http://schemas.datacontract.org/2004/07/System.Collections.Generic'>", "<a:KeyValuePairOfstringanyType>", "<c:key>Target</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(r), "</a:Id>", "<a:LogicalName>", a, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<c:key>Principal</c:key>", "<c:value i:type='a:EntityReference'>", "<a:Id>", o(n), "</a:Id>", "<a:LogicalName>", i, "</a:LogicalName>", "<a:Name i:nil='true' />", "</c:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", "<a:RequestId i:nil='true' />", "<a:RequestName>RetrievePrincipalAccess</a:RequestName>", "</request>"].join(""), l = !!t; return x(s, "Execute", l, function (e) { var a = N(e, "//b:value"); return l ? void t(a) : a }) }, Z = ["Attributes", "ManyToManyRelationships", "ManyToOneRelationships", "OneToManyRelationships", "Privileges", "LocalizedLabels", "Options", "Targets"], et = function (e) { for (var t = 0, a = Z.length; a > t; t++) if (e === Z[t]) return !0; return !1 }, tt = function (e) { return "undefined" != typeof e.baseName ? e.baseName : e.localName }, at = function (e) { if (null != e.attributes && 1 === e.attributes.length && null != e.attributes.getNamedItem("i:nil") && "true" === e.attributes.getNamedItem("i:nil").nodeValue) return null; if (null != e.firstChild && 3 === e.firstChild.nodeType) { var t = tt(e); switch (t) { case "ActivityTypeMask": case "ObjectTypeCode": case "ColumnNumber": case "DefaultFormValue": case "MaxValue": case "MinValue": case "MaxLength": case "Order": case "Precision": case "PrecisionSource": case "LanguageCode": return parseInt(e.firstChild.nodeValue, 10); case "AutoRouteToOwnerQueue": case "CanBeChanged": case "CanTriggerWorkflow": case "IsActivity": case "IsActivityParty": case "IsAvailableOffline": case "IsChildEntity": case "IsCustomEntity": case "IsCustomOptionSet": case "IsDocumentManagementEnabled": case "IsEnabledForCharts": case "IsGlobal": case "IsImportable": case "IsIntersect": case "IsManaged": case "IsReadingPaneEnabled": case "IsValidForAdvancedFind": case "CanBeSecuredForCreate": case "CanBeSecuredForRead": case "CanBeSecuredForUpdate": case "IsCustomAttribute": case "IsPrimaryId": case "IsPrimaryName": case "IsSecured": case "IsValidForCreate": case "IsValidForRead": case "IsValidForUpdate": case "IsCustomRelationship": case "CanBeBasic": case "CanBeDeep": case "CanBeGlobal": case "CanBeLocal": return "true" === e.firstChild.nodeValue ? !0 : !1; case "Value": return "true" === e.firstChild.nodeValue || "false" === e.firstChild.nodeValue ? "true" === e.firstChild.nodeValue ? !0 : !1 : "ApplicationRequired" === e.firstChild.nodeValue || "None" === e.firstChild.nodeValue || "Recommended" === e.firstChild.nodeValue || "SystemRequired" === e.firstChild.nodeValue ? e.firstChild.nodeValue : parseInt(e.firstChild.nodeValue, 10); default: return e.firstChild.nodeValue } } if (et(tt(e))) { for (var a = [], r = 0, i = e.childNodes.length; i > r; r++) { var n; n = null != e.childNodes[r].attributes && null != e.childNodes[r].attributes.getNamedItem("i:type") ? e.childNodes[r].attributes.getNamedItem("i:type").nodeValue.split(":")[1] : tt(e.childNodes[r]); var s = at(e.childNodes[r]); s._type = n, a.push(s) } return a } if (0 === e.childNodes.length) return null; var o = {}; null != e.attributes.getNamedItem("i:type") && (o._type = e.attributes.getNamedItem("i:type").nodeValue.split(":")[1]); for (var l = 0, c = e.childNodes.length; c > l; l++) o[tt(e.childNodes[l])] = 3 === e.childNodes[l].nodeType ? e.childNodes[l].nodeValue : at(e.childNodes[l]); return o }, rt = function (e, t, a) { e = L(e) ? e : [e]; for (var r = "", i = 0, n = e.length; n > i; i++) r += o(e[i]) + " "; var s = ['<request i:type="a:RetrieveAllEntitiesRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityFilters</b:key>", '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">' + o(r) + "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">' + o(t.toString()) + "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveAllEntities</a:RequestName>", "</request>"].join(""), l = !!a; return x(s, "Execute", l, function (e) { for (var t = b(e, "//c:EntityMetadata"), r = [], i = 0, n = t.length; n > i; i++) { var s = at(t[i]); s._type = "EntityMetadata", r.push(s) } return l ? void a(r) : r }) }, it = function (e, t, a, r) { e = L(e) ? e : [e]; for (var i = "", n = 0, s = e.length; s > n; n++) i += o(e[n]) + " "; var l = ['<request i:type="a:RetrieveEntityRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityFilters</b:key>", '<b:value i:type="c:EntityFilters" xmlns:c="http://schemas.microsoft.com/xrm/2011/Metadata">', o(i), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>MetadataId</b:key>", '<b:value i:type="c:guid"  xmlns:c="http://schemas.microsoft.com/2003/10/Serialization/">', o("00000000-0000-0000-0000-000000000000"), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">', o(a.toString()), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>LogicalName</b:key>", '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">', o(t), "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveEntity</a:RequestName>", "</request>"].join(""), c = !!r; return x(l, "Execute", c, function (e) { for (var t = b(e, "//b:value"), a = [], i = 0, n = t.length; n > i; i++) { var s = at(t[i]); s._type = "EntityMetadata", a.push(s) } return c ? void r(a) : a }) }, nt = function (e, t, a, r) { var i = ['<request i:type="a:RetrieveAttributeRequest" xmlns:a="http://schemas.microsoft.com/xrm/2011/Contracts">', '<a:Parameters xmlns:b="http://schemas.datacontract.org/2004/07/System.Collections.Generic">', "<a:KeyValuePairOfstringanyType>", "<b:key>EntityLogicalName</b:key>", '<b:value i:type="c:string" xmlns:c="http://www.w3.org/2001/XMLSchema">', o(e), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>MetadataId</b:key>", '<b:value i:type="ser:guid"  xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/">', o("00000000-0000-0000-0000-000000000000"), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>RetrieveAsIfPublished</b:key>", '<b:value i:type="c:boolean" xmlns:c="http://www.w3.org/2001/XMLSchema">', o(a.toString()), "</b:value>", "</a:KeyValuePairOfstringanyType>", "<a:KeyValuePairOfstringanyType>", "<b:key>LogicalName</b:key>", '<b:value i:type="c:string"   xmlns:c="http://www.w3.org/2001/XMLSchema">', o(t), "</b:value>", "</a:KeyValuePairOfstringanyType>", "</a:Parameters>", '<a:RequestId i:nil="true" />', "<a:RequestName>RetrieveAttribute</a:RequestName>", "</request>"].join(""), n = !!r; return x(i, "Execute", n, function (e) { for (var t = b(e, "//b:value"), a = [], i = 0, s = t.length; s > i; i++) { var o = at(t[i]); a.push(o) } return n ? void r(a) : a }) }; return { BusinessEntity: f, Execute: O, Fetch: I, Retrieve: V, RetrieveMultiple: A, Create: k, Update: q, Delete: w, QueryByAttribute: K, QueryAll: Q, SetState: G, Associate: F, Disassociate: D, Assign: _, RetrievePrincipalAccess: Y, GrantAccess: J, ModifyAccess: W, RevokeAccess: $, GetCurrentUserId: U, GetCurrentUserBusinessUnitId: H, GetCurrentUserRoles: z, IsCurrentUserRole: B, RetrieveAllEntitiesMetadata: rt, RetrieveEntityMetadata: it, RetrieveAttributeMetadata: nt }
}(), XrmServiceToolkit.Extension = function () { var e = function (e) { void 0 !== Xrm.Utility && void 0 !== Xrm.Utility.alertDialog ? Xrm.Utility.alertDialog(e) : alert(e) }, t = function () { var e; if ("undefined" != typeof window.GetGlobalContext) e = window.GetGlobalContext(); else if ("undefined" != typeof GetGlobalContext) e = GetGlobalContext(); else if ("undefined" != typeof Xrm) e = Xrm.Page.context; else { if ("undefined" == typeof window.parent.Xrm) throw new Error("Context is not available."); e = window.parent.Xrm.Page.context } return e }, a = function () { var e = "undefined" != typeof t().getClientUrl ? t().getClientUrl() : t().getServerUrl(); return e.match(/\/$/) && (e = e.substring(0, e.length - 1)), e }, r = function (t, r) { function i(e, t, a) { var i = jQuery("#" + t + "_c").children(":first"); if (null != i) { var n = '<img id="img_' + t + '" src="/_imgs/ico/16_help.gif" alt="' + a + '" width="16" height="16" /><div id="help_' + t + '" style="visibility: hidden; position: absolute;">: ' + a + "</div>"; jQuery(i).append(n), jQuery("#img_" + t).css("display", r ? "inline" : "none") } } function n(e) { var t = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(), a = jQuery("entity[name=" + t + "]", e); jQuery(a).children().each(function () { var e = jQuery(this).attr("name"), a = jQuery(this).find("shorthelp").text(); i(t, e, a) }) } if (void 0 !== Xrm.Page.ui.setFormNotification) return void e("XrmServiceToolkit.Extension.JQueryXrmFieldTooltip is not supported in CRM2013.\nPlease use the out of box functionality"); if ("undefined" == typeof jQuery) { var s = "jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."; return void e(s) } jQuery.support.cors = !0, jQuery.ajax({ type: "GET", url: a() + "/WebResources/" + t, dataType: "xml", success: n, error: function () { e("Something is wrong to setup the tooltip for the fields. Please contact your administrator") } }) }, i = function (t) { function r(e, t, a) { for (var r in a.config) if (a.config.hasOwnProperty(r)) { var i = a.config[r]; if (i.parent === e && i.dependent === t) { var n, s, o = Xrm.Page.data.entity.attributes.get(e), l = Xrm.Page.data.entity.attributes.get(t), c = Xrm.Page.getControl(e), u = Xrm.Page.getControl(t), d = l.getValue(); if (null === o.getValue()) { l.setValue(null), l.setSubmitMode("always"), l.fireOnChange(), n = l.controls.get(); for (s in n) n.hasOwnProperty(s) && n[s].setDisabled(!0); return } for (var m in i.options) if (i.options.hasOwnProperty(m)) { var y = i.options[m], p = y.showOptions; if (o.getValue().toString() === y.value.toString()) { n = l.controls.get(); for (s in n) if (n.hasOwnProperty(s)) { n[s].setDisabled(!1), n[s].clearOptions(); for (var f in p) p.hasOwnProperty(f) && n[s].addOption(p[f]) } var h = !1, g = p; for (var v in g) if (g.hasOwnProperty(v)) { var b = g[v].value; if (d === parseInt(b)) { h = !0; break } } l.setValue(h ? d : null), l.setSubmitMode("always"), l.fireOnChange(), c.getDisabled() === !0 && u.setDisabled(!0); break } } } } } function n(e) { for (var t = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(), a = jQuery("entity[name=" + t + "]", e), n = a.children("ParentField"), s = [], o = 0, l = n.length; l > o; o++) { var c = n[o], u = {}; u.parent = jQuery(c).attr("id"), u.dependent = jQuery(c).children("DependentField:first").attr("id"), u.options = []; for (var d = jQuery(c).children("Option"), m = 0, y = d.length; y > m; m++) { var p = {}; p.value = jQuery(d[m]).attr("value"), p.showOptions = []; for (var f = jQuery(d[m]).children("ShowOption"), h = 0, g = f.length; g > h; h++) { var v = {}; v.value = jQuery(f[h]).attr("value"), v.text = jQuery(f[h]).attr("label"), p.showOptions.push(v) } u.options.push(p) } s.push(u) } i.config = s; for (var b in i.config) if (i.config.hasOwnProperty(b)) { var R = i.config[b].parent, N = i.config[b].dependent; r(R, N, i) } } return "undefined" == typeof jQuery ? void e("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load.") : (jQuery.support.cors = !0, void jQuery.ajax({ type: "GET", url: a() + "/WebResources/" + t, dataType: "xml", success: n, error: function () { e("Something is wrong to setup the dependent picklist. Please contact your administrator") } })) }, n = function (t) { function r(e, t, a, r, i) { var n = "{1DFB2B35-B07C-44D1-868D-258DEEAB88E2}"; Xrm.Page.getControl(e).addCustomView(n, t, a, r, i, !0) } function i(t) { var a = ""; try { null != t && ("undefined" != typeof XMLSerializer && "undefined" == typeof t.xml ? a = (new XMLSerializer).serializeToString(t) : "undefined" != typeof t.xml ? a = t.xml : "undefined" != typeof t[0].xml && (a = t[0].xml)) } catch (r) { e("Cannot convert the XML to a string.") } return a } function s(t) { for (var a = Xrm.Page.data.entity.getEntityName().toString().toLowerCase(), s = jQuery("entity[name=" + a + "]", t), o = s.children("TargetField"), l = [], c = 0, u = o.length; u > c; c++) { var d = o[c], m = {}; m.target = jQuery(d).attr("id"), m.entityName = jQuery(d).attr("viewentity"), m.viewName = jQuery(d).attr("viewname"), m.dynamic = jQuery(d).children("dynamic").children(), m.fetchXml = i(jQuery(d).children("fetch")), m.layoutXml = i(jQuery(d).children("grid")), l.push(m) } n.config = l; for (var y in n.config) if (n.config.hasOwnProperty(y)) { var p = n.config[y].target, f = n.config[y].entityName, h = n.config[y].viewName, g = n.config[y].dynamic, v = n.config[y].fetchXml, b = n.config[y].layoutXml; if (null != g) for (var R = 0, N = g.length; N > R; R++) { var T = Xrm.Page.getControl(jQuery(g).attr("name")).getControlType(), S = jQuery(g).attr("fieldvaluetype"); if (null === Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue()) return void e(jQuery(g).attr("name") + " does not have a value. Please put validation logic on the field change to call this function. Only use XrmServiceToolkit.Extension.JQueryXrmCustomFilterView when the field has a value."); var P = null; switch (T) { case "standard": P = Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue(); break; case "optionset": P = null != S && "label" === S ? Xrm.Page.getAttribute(jQuery(g).attr("name")).getSelectionOption().text : Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue(); break; case "lookup": P = null != S && "name" === S ? Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue()[0].name : Xrm.Page.getAttribute(jQuery(g).attr("name")).getValue()[0].id; break; default: e(jQuery(g).attr("name") + " is not supported for filter lookup view. Please change the configuration.") } var C = jQuery(g).attr("operator"); if (null === C) return void e("operator is missing in the configuration file. Please fix the issue"); var E = jQuery(g).attr("fetchnote"); switch (C.toLowerCase()) { case "contains": case "does not contain": P = "%" + P + "%"; break; case "begins with": case "does not begin with": P += "%"; break; case "ends with": case "does not end with": P = "%" + P } v = v.replace(E, P) } r(p, f, h, v, b) } } return "undefined" == typeof jQuery ? void e("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load.") : (jQuery.support.cors = !0, void jQuery.ajax({ type: "GET", url: a() + "/WebResources/" + t, dataType: "xml", success: s, error: function () { e("Something is wrong to setup the custom filter view. Please contact your administrator") } })) }, s = function (t, a) { if (void 0 !== Xrm.Page.ui.setFormNotification) return void e("XrmServiceToolkit.Extension.JQueryXrmFormatNotesControl is not supported in CRM2013"); if ("undefined" == typeof jQuery) return void e("jQuery is not loaded.\nPlease ensure that jQuery is included\n as web resource in the form load."); jQuery.support.cors = !0; var r = jQuery("#notescontrol"); if (null !== r && void 0 !== r) { var i = r.attr("url"); if (null != i) t ? a || (i = i.replace("EnableInlineEdit=true", "EnableInlineEdit=false")) : i = i.replace("EnableInsert=true", "EnableInsert=false"), r.attr("url", i); else { var n = r.attr("src"); null != n && (t ? a || (n = n.replace("EnableInlineEdit=true", "EnableInlineEdit=false")) : n = n.replace("EnableInsert=true", "EnableInsert=false"), r.attr("src", n)) } } }; return { JQueryXrmFieldTooltip: r, JQueryXrmDependentOptionSet: i, JQueryXrmCustomFilterView: n, JQueryXrmFormatNotesControl: s } }();